# Fila
# FIFO(First-in-First-out)

#incerção
def enqueue(fila,elemento):
    fila.append(elemento)

#remoção - No inicio
def dequeue(fila):
    if len(fila) == 0:
        return "A fila está vazia, não e possível remover!"
    else:
        return fila.pop(0)

#primeiro elemento - peek
def peek(fila):
    if len(fila) == 0:
        return "Fila Vazia!"
    else:
        return fila[0]

def is_empty(fila):
    return len(fila) == 0

def size(fila):
    return len(fila)

#reverse
def queueReverser(fila):
    #return fila[::-1]
    filaReversa = []
    while not  is_empty(fila):
        item = fila.pop() #dequeue(fila)
        enqueue(filaReversa, item)
    return filaReversa

fila = []
enqueue(fila,1)
enqueue(fila,2)
enqueue(fila,3)
#print(fila)
#print(dequeue(fila))
#print(peek(fila))
#print(is_empty(fila))
#print(size(fila))
'''filaReversa = queueReverser(fila)
print(dequeue(filaReversa)) #3
print(dequeue(filaReversa)) #2
print(dequeue(filaReversa)) #1 '''
#print(queueReverser(fila))
print(queueReverser(fila))
